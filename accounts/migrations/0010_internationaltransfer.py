# Generated by Django 4.2.7 on 2025-10-13 21:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_localtransfer'),
    ]

    operations = [
        migrations.CreateModel(
            name='InternationalTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_amount', models.DecimalField(decimal_places=2, help_text='Amount to transfer', max_digits=15)),
                ('currency', models.CharField(choices=[('USD', 'USD - US Dollar'), ('EUR', 'EUR - Euro'), ('GBP', 'GBP - British Pound'), ('CAD', 'CAD - Canadian Dollar'), ('AUD', 'AUD - Australian Dollar'), ('JPY', 'JPY - Japanese Yen'), ('CHF', 'CHF - Swiss Franc'), ('CNY', 'CNY - Chinese Yuan')], default='USD', help_text='Currency code', max_length=3)),
                ('transfer_method', models.CharField(choices=[('wire_transfer', 'Wire Transfer'), ('cryptocurrency', 'Cryptocurrency'), ('paypal', 'PayPal'), ('wise_transfer', 'Wise Transfer'), ('cash_app', 'Cash App'), ('skrill', 'Skrill'), ('venmo', 'Venmo'), ('zelle', 'Zelle'), ('revolut', 'Revolut'), ('alipay', 'Alipay'), ('wechat_pay', 'WeChat Pay')], help_text='Method of international transfer', max_length=20)),
                ('recipient_name', models.CharField(help_text='Full name of the recipient', max_length=100)),
                ('recipient_email', models.EmailField(help_text='Email address of the recipient', max_length=254)),
                ('recipient_phone', models.CharField(blank=True, help_text='Phone number of the recipient', max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, help_text="Name of the recipient's bank", max_length=100, null=True)),
                ('bank_address', models.TextField(blank=True, help_text='Bank address', null=True)),
                ('account_number', models.CharField(blank=True, help_text='Account number', max_length=50, null=True)),
                ('routing_number', models.CharField(blank=True, help_text='Bank routing number', max_length=20, null=True)),
                ('swift_code', models.CharField(blank=True, help_text='SWIFT/BIC code', max_length=11, null=True)),
                ('iban', models.CharField(blank=True, help_text='IBAN (International Bank Account Number)', max_length=34, null=True)),
                ('wallet_address', models.CharField(blank=True, help_text='Cryptocurrency wallet address', max_length=200, null=True)),
                ('wallet_type', models.CharField(blank=True, help_text='Type of wallet (Bitcoin, Ethereum, etc.)', max_length=50, null=True)),
                ('purpose_of_transfer', models.CharField(help_text='Purpose of the transfer', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Additional transfer description', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='pending', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Unique transfer reference number', max_length=50, unique=True)),
                ('tracking_number', models.CharField(blank=True, help_text='Tracking number for the transfer', max_length=50, null=True)),
                ('transfer_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Fee charged for the transfer', max_digits=10)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1.0, help_text='Exchange rate applied', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount including fees', max_digits=15)),
                ('transfer_date', models.DateTimeField(auto_now_add=True, help_text='When the transfer was initiated')),
                ('processed_date', models.DateTimeField(blank=True, help_text='When the transfer was processed', null=True)),
                ('completed_date', models.DateTimeField(blank=True, help_text='When the transfer was completed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this transfer', null=True)),
                ('compliance_notes', models.TextField(blank=True, help_text='Compliance and regulatory notes', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this transfer should be displayed')),
                ('requires_approval', models.BooleanField(default=False, help_text='Whether this transfer requires manual approval')),
                ('vip_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='international_transfers', to='accounts.vipprofile')),
            ],
            options={
                'verbose_name': 'International Transfer',
                'verbose_name_plural': 'International Transfers',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['vip_member', '-created_at'], name='accounts_in_vip_mem_b29d33_idx'), models.Index(fields=['status', '-created_at'], name='accounts_in_status_e07490_idx'), models.Index(fields=['transfer_method', '-created_at'], name='accounts_in_transfe_fd59a8_idx'), models.Index(fields=['currency', '-created_at'], name='accounts_in_currenc_2e5714_idx')],
            },
        ),
    ]
